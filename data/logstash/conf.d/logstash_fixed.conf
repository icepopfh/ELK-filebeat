input {
    tcp {
       port => 5043
       type => "tcp"
       add_field => {"env"=>"prod"}
    }
    tcp {
       port => 5044
       type => "tcp"
       add_field => {"env"=>"test"}
    }
    beats {
        port => 5045
        add_field => {"env"=>"prod"}
    }
    beats {
        port => 5046
        add_field => {"env"=>"test"}
    }
    file {
       path => "file path"
       add_field => {"env"=>"prod"}
    }
    file {
       path => "file path"
       add_field => {"env"=>"test"}
    }
}

filter {
    multiline {
       pattern => '^(\{\ \"project\")'
       negate => true
       what => "previous"
    }
    mutate {
     gsub => [
       # 替换message下的所有反斜杠
       "message","[\\]","",
       # 去掉json格式错误的双引号
       "message","\"\[","[",
       "message","\]\"","]"
       ]
    }
    grok {
       match => {
           #获取日志level
           "message" => "(?<level>(?<=(\"level\":\ \")).*?(?=(\",\ \"message\")))"
       }
    }
    grok {
       match => {
           #获取日志项目名称
           "message" => "(?<project>(?<=(\"project\":\ \")).*?(?=(\",\ \"nlogdate\")))"
       }
    }
    grok {
       #匹配message的第一个时间，即nlogtime
       match => ["message","%{TIMESTAMP_ISO8601:logdate}"]
    }
    date {
       #把logtime转为时间格式，并且替换原来的timestamp
       match => ["logdate", "yyyy-MM-dd HH:mm:ss.SSSS"]
       #配置时区
       timezone => "Asia/Shanghai"
       #timezone => "+08:00"
       target => "@timestamp"
       #替换后，删除多余的logdate字段
       #remove_field => ["logdate"]
    }
    mutate {
       #转换为小写
       lowercase => ["project"]
    }
}

output {
    if [env] == "prod"{
        elasticsearch {
            hosts => "es_ip:9200"
            index => "%{project}"
        }
    }else if [env] == "test"{
        elasticsearch {
            hosts => "es_ip:9200"
            index => "%{project}-test"
        }
    }
}